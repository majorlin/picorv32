!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
BARREL_SHIFTER	picorv32.v	/^	parameter [ 0:0] BARREL_SHIFTER = 0,$/;"	c
BARREL_SHIFTER	picosoc.v	/^	parameter [0:0] BARREL_SHIFTER = 1;$/;"	c
CATCH_ILLINSN	picorv32.v	/^	parameter [ 0:0] CATCH_ILLINSN = 1,$/;"	c
CATCH_MISALIGN	picorv32.v	/^	parameter [ 0:0] CATCH_MISALIGN = 1,$/;"	c
COMPRESSED_ISA	picorv32.v	/^	parameter [ 0:0] COMPRESSED_ISA = 0,$/;"	c
ENABLE_COMPRESSED	picosoc.v	/^	parameter [0:0] ENABLE_COMPRESSED = 1;$/;"	c
ENABLE_COUNTERS	picorv32.v	/^	parameter [ 0:0] ENABLE_COUNTERS = 1,$/;"	c
ENABLE_COUNTERS	picosoc.v	/^	parameter [0:0] ENABLE_COUNTERS = 1;$/;"	c
ENABLE_DIV	picorv32.v	/^	parameter [ 0:0] ENABLE_DIV = 0,$/;"	c
ENABLE_FAST_MUL	picorv32.v	/^	parameter [ 0:0] ENABLE_FAST_MUL = 0,$/;"	c
ENABLE_IRQ	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ = 0,$/;"	c
ENABLE_IRQ_QREGS	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ_QREGS = 1,$/;"	c
ENABLE_IRQ_QREGS	picosoc.v	/^	parameter [0:0] ENABLE_IRQ_QREGS = 0;$/;"	c
ENABLE_IRQ_TIMER	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ_TIMER = 1,$/;"	c
ENABLE_MUL	picorv32.v	/^	parameter [ 0:0] ENABLE_MUL = 0,$/;"	c
ENABLE_MULDIV	picosoc.v	/^	parameter [0:0] ENABLE_MULDIV = 1;$/;"	c
ENABLE_PCPI	picorv32.v	/^	parameter [ 0:0] ENABLE_PCPI = 0,$/;"	c
ENABLE_REGS_16_31	picorv32.v	/^	parameter [ 0:0] ENABLE_REGS_16_31 = 1,$/;"	c
ENABLE_TRACE	picorv32.v	/^	parameter [ 0:0] ENABLE_TRACE = 0,$/;"	c
EXTRA_MUL_FFS	picorv32.v	/^	parameter EXTRA_MUL_FFS = 0,$/;"	c
FORMAL_KEEP	picorv32.v	/^    `define FORMAL_KEEP (* keep *)$/;"	c
FORMAL_KEEP	picorv32.v	/^    `define FORMAL_KEEP$/;"	c
FORMAL_KEEP	picorv32.v	/^  `define FORMAL_KEEP (* keep *)$/;"	c
LATCHED_IRQ	picorv32.v	/^	parameter [31:0] LATCHED_IRQ = 32'h ffff_ffff,$/;"	c
LATCHED_MEM_RDATA	picorv32.v	/^	parameter [ 0:0] LATCHED_MEM_RDATA = 0,$/;"	c
MASKED_IRQ	picorv32.v	/^	parameter [31:0] MASKED_IRQ = 32'h 0000_0000,$/;"	c
MUL_CLKGATE	picorv32.v	/^	parameter MUL_CLKGATE = 0$/;"	c
PICORV32_REGS	picosoc.v	/^`define PICORV32_REGS picosoc_regs$/;"	c
PICORV32_V	picorv32.v	/^`define PICORV32_V$/;"	c
PROGADDR_IRQ	picorv32.v	/^	parameter [31:0] PROGADDR_IRQ = 32'h 0000_0010,$/;"	c
PROGADDR_IRQ	picosoc.v	/^	parameter [31:0] PROGADDR_IRQ = 32'h 0000_0000;$/;"	c
PROGADDR_RESET	picorv32.v	/^	parameter [31:0] PROGADDR_RESET = 32'h 0000_0000,$/;"	c
PROGADDR_RESET	picosoc.v	/^	parameter [31:0] PROGADDR_RESET = 32'h 0010_0000; \/\/ 1 MB into flash$/;"	c
REGS_INIT_ZERO	picorv32.v	/^	parameter [ 0:0] REGS_INIT_ZERO = 0,$/;"	c
RXD	zebu_tb.v	/^    wire RXD;$/;"	n
STACKADDR	picorv32.v	/^	parameter [31:0] STACKADDR = 32'h ffff_ffff$/;"	c
STACKADDR	picosoc.v	/^	parameter [31:0] STACKADDR = (4*MEM_WORDS);       \/\/ end of memory$/;"	c
STEPS_AT_ONCE	picorv32.v	/^	parameter STEPS_AT_ONCE = 1,$/;"	c
TWO_CYCLE_ALU	picorv32.v	/^	parameter [ 0:0] TWO_CYCLE_ALU = 0,$/;"	c
TWO_CYCLE_COMPARE	picorv32.v	/^	parameter [ 0:0] TWO_CYCLE_COMPARE = 0,$/;"	c
TWO_STAGE_SHIFT	picorv32.v	/^	parameter [ 0:0] TWO_STAGE_SHIFT = 1,$/;"	c
TXD	zebu_tb.v	/^    wire TXD;$/;"	n
`endif	picorv32.v	/^`endif$/;"	p
`ifdef	picorv32.v	/^`ifdef RISCV_FORMAL$/;"	p
ack_arvalid	picorv32.v	/^	reg ack_arvalid;$/;"	r
ack_awvalid	picorv32.v	/^	reg ack_awvalid;$/;"	r
ack_wvalid	picorv32.v	/^	reg ack_wvalid;$/;"	r
active	picorv32.v	/^	reg [3:0] active;$/;"	r
addr	picosoc.v	/^	input [21:0] addr,$/;"	p
alu_add_sub	picorv32.v	/^	reg [31:0] alu_add_sub;$/;"	r
alu_eq	picorv32.v	/^	reg alu_eq, alu_ltu, alu_lts;$/;"	r
alu_lts	picorv32.v	/^	reg alu_eq, alu_ltu, alu_lts;$/;"	r
alu_ltu	picorv32.v	/^	reg alu_eq, alu_ltu, alu_lts;$/;"	r
alu_out	picorv32.v	/^	reg [31:0] alu_out, alu_out_q;$/;"	r
alu_out_0	picorv32.v	/^	reg alu_out_0, alu_out_0_q;$/;"	r
alu_out_0_q	picorv32.v	/^	reg alu_out_0, alu_out_0_q;$/;"	r
alu_out_q	picorv32.v	/^	reg [31:0] alu_out, alu_out_q;$/;"	r
alu_shl	picorv32.v	/^	reg [31:0] alu_shl, alu_shr;$/;"	r
alu_shr	picorv32.v	/^	reg [31:0] alu_shl, alu_shr;$/;"	r
alu_wait	picorv32.v	/^	reg alu_wait, alu_wait_2;$/;"	r
alu_wait_2	picorv32.v	/^	reg alu_wait, alu_wait_2;$/;"	r
assert	picorv32.v	/^  `define assert(assert_expr) assert(assert_expr)$/;"	c
assert	picorv32.v	/^  `define assert(assert_expr) empty_statement$/;"	c
bitcount	spiflash.v	/^	integer bitcount = 0;$/;"	r
buffer	hx8kdemo_tb.v	/^	reg [7:0] buffer;$/;"	r
buffer	spiflash.v	/^	reg [7:0] buffer;$/;"	r
buffer	spimemio.v	/^	reg [23:0] buffer;$/;"	r
bytecount	spiflash.v	/^	integer bytecount = 0;$/;"	r
cached_ascii_instr	picorv32.v	/^	reg [63:0] cached_ascii_instr;$/;"	r
cached_insn_imm	picorv32.v	/^	reg [31:0] cached_insn_imm;$/;"	r
cached_insn_opcode	picorv32.v	/^	reg [31:0] cached_insn_opcode;$/;"	r
cached_insn_rd	picorv32.v	/^	reg [4:0] cached_insn_rd;$/;"	r
cached_insn_rs1	picorv32.v	/^	reg [4:0] cached_insn_rs1;$/;"	r
cached_insn_rs2	picorv32.v	/^	reg [4:0] cached_insn_rs2;$/;"	r
cfg_divider	simpleuart.v	/^	reg [31:0] cfg_divider;$/;"	r
cfgreg_do	spimemio.v	/^	output [31:0] cfgreg_do$/;"	p
cfgreg_we	spimemio.v	/^	input   [3:0] cfgreg_we,$/;"	p
clear_prefetched_high_word	picorv32.v	/^	reg clear_prefetched_high_word;$/;"	r
clear_prefetched_high_word_q	picorv32.v	/^	reg clear_prefetched_high_word_q;$/;"	r
clk	hx8kdemo.v	/^	input clk,$/;"	p
clk	hx8kdemo_tb.v	/^	reg clk;$/;"	r
clk	picorv32.v	/^	input clk, resetn,$/;"	p
clk	picorv32.v	/^	input clk, wen,$/;"	p
clk	picorv32.v	/^	wire clk;$/;"	n
clk	picosoc.v	/^	input clk, wen,$/;"	p
clk	picosoc.v	/^	input clk,$/;"	p
clk	simpleuart.v	/^	input clk,$/;"	p
clk	spimemio.v	/^	input clk, resetn,$/;"	p
compressed_instr	picorv32.v	/^	reg compressed_instr;$/;"	r
config_clk	spimemio.v	/^	reg       config_clk;     \/\/ cfgref[4]$/;"	r
config_cont	spimemio.v	/^	reg       config_cont;    \/\/ cfgreg[20]$/;"	r
config_csb	spimemio.v	/^	reg       config_csb;     \/\/ cfgreg[5]$/;"	r
config_ddr	spimemio.v	/^	reg       config_ddr;     \/\/ cfgreg[22]$/;"	r
config_do	spimemio.v	/^	reg [3:0] config_do;      \/\/ cfgreg[3:0]$/;"	r
config_dummy	spimemio.v	/^	reg [3:0] config_dummy;   \/\/ cfgreg[19:16]$/;"	r
config_en	spimemio.v	/^	reg       config_en;      \/\/ cfgreg[31]$/;"	r
config_oe	spimemio.v	/^	reg [3:0] config_oe;      \/\/ cfgreg[11:8]$/;"	r
config_qspi	spimemio.v	/^	reg       config_qspi;    \/\/ cfgreg[21]$/;"	r
count	spimemio.v	/^	reg [3:0] count;$/;"	r
count_cycle	picorv32.v	/^	reg [63:0] count_cycle, count_instr;$/;"	r
count_instr	picorv32.v	/^	reg [63:0] count_cycle, count_instr;$/;"	r
cpu_state	picorv32.v	/^	reg [7:0] cpu_state;$/;"	r
cpuregs	picorv32.v	/^	reg [31:0] cpuregs [0:regfile_size-1];$/;"	r
cpuregs_raddr1	picorv32.v	/^	wire [5:0] cpuregs_raddr1 = ENABLE_REGS_DUALPORT ? decoded_rs1 : decoded_rs;$/;"	n
cpuregs_raddr2	picorv32.v	/^	wire [5:0] cpuregs_raddr2 = ENABLE_REGS_DUALPORT ? decoded_rs2 : 0;$/;"	n
cpuregs_rdata1	picorv32.v	/^	wire[31:0] cpuregs_rdata1;$/;"	n
cpuregs_rdata2	picorv32.v	/^	wire[31:0] cpuregs_rdata2;$/;"	n
cpuregs_rs1	picorv32.v	/^	reg [31:0] cpuregs_rs1;$/;"	r
cpuregs_rs2	picorv32.v	/^	reg [31:0] cpuregs_rs2;$/;"	r
cpuregs_waddr	picorv32.v	/^	wire [5:0] cpuregs_waddr = latched_rd;$/;"	n
cpuregs_wrdata	picorv32.v	/^	reg [31:0] cpuregs_wrdata;$/;"	r
cpuregs_write	picorv32.v	/^	reg cpuregs_write;$/;"	r
csb	spiflash.v	/^	input csb,$/;"	p
current_pc	picorv32.v	/^	reg [31:0] current_pc;$/;"	r
cycle_cnt	hx8kdemo_tb.v	/^	integer cycle_cnt = 0;$/;"	r
dbg_insn_addr	picorv32.v	/^	reg [31:0] dbg_insn_addr;$/;"	r
dbg_insn_opcode	picorv32.v	/^	reg [31:0] dbg_insn_opcode;$/;"	r
dbg_irq_call	picorv32.v	/^	reg dbg_irq_call;$/;"	r
dbg_irq_enter	picorv32.v	/^	reg dbg_irq_enter;$/;"	r
dbg_irq_ret	picorv32.v	/^	reg [31:0] dbg_irq_ret;$/;"	r
dbg_mem_addr	picorv32.v	/^	wire [31:0] dbg_mem_addr  = mem_addr;$/;"	n
dbg_mem_instr	picorv32.v	/^	wire dbg_mem_instr = mem_instr;$/;"	n
dbg_mem_rdata	picorv32.v	/^	wire [31:0] dbg_mem_rdata = mem_rdata;$/;"	n
dbg_mem_ready	picorv32.v	/^	wire dbg_mem_ready = mem_ready;$/;"	n
dbg_mem_valid	picorv32.v	/^	wire dbg_mem_valid = mem_valid;$/;"	n
dbg_mem_wdata	picorv32.v	/^	wire [31:0] dbg_mem_wdata = mem_wdata;$/;"	n
dbg_mem_wstrb	picorv32.v	/^	wire [ 3:0] dbg_mem_wstrb = mem_wstrb;$/;"	n
dbg_next	picorv32.v	/^	reg dbg_next;$/;"	r
dbg_reg_x0	picorv32.v	/^	wire [31:0] dbg_reg_x0  = 0;$/;"	n
dbg_reg_x1	picorv32.v	/^	wire [31:0] dbg_reg_x1  = cpuregs[1];$/;"	n
dbg_reg_x10	picorv32.v	/^	wire [31:0] dbg_reg_x10 = cpuregs[10];$/;"	n
dbg_reg_x11	picorv32.v	/^	wire [31:0] dbg_reg_x11 = cpuregs[11];$/;"	n
dbg_reg_x12	picorv32.v	/^	wire [31:0] dbg_reg_x12 = cpuregs[12];$/;"	n
dbg_reg_x13	picorv32.v	/^	wire [31:0] dbg_reg_x13 = cpuregs[13];$/;"	n
dbg_reg_x14	picorv32.v	/^	wire [31:0] dbg_reg_x14 = cpuregs[14];$/;"	n
dbg_reg_x15	picorv32.v	/^	wire [31:0] dbg_reg_x15 = cpuregs[15];$/;"	n
dbg_reg_x16	picorv32.v	/^	wire [31:0] dbg_reg_x16 = cpuregs[16];$/;"	n
dbg_reg_x17	picorv32.v	/^	wire [31:0] dbg_reg_x17 = cpuregs[17];$/;"	n
dbg_reg_x18	picorv32.v	/^	wire [31:0] dbg_reg_x18 = cpuregs[18];$/;"	n
dbg_reg_x19	picorv32.v	/^	wire [31:0] dbg_reg_x19 = cpuregs[19];$/;"	n
dbg_reg_x2	picorv32.v	/^	wire [31:0] dbg_reg_x2  = cpuregs[2];$/;"	n
dbg_reg_x20	picorv32.v	/^	wire [31:0] dbg_reg_x20 = cpuregs[20];$/;"	n
dbg_reg_x21	picorv32.v	/^	wire [31:0] dbg_reg_x21 = cpuregs[21];$/;"	n
dbg_reg_x22	picorv32.v	/^	wire [31:0] dbg_reg_x22 = cpuregs[22];$/;"	n
dbg_reg_x23	picorv32.v	/^	wire [31:0] dbg_reg_x23 = cpuregs[23];$/;"	n
dbg_reg_x24	picorv32.v	/^	wire [31:0] dbg_reg_x24 = cpuregs[24];$/;"	n
dbg_reg_x25	picorv32.v	/^	wire [31:0] dbg_reg_x25 = cpuregs[25];$/;"	n
dbg_reg_x26	picorv32.v	/^	wire [31:0] dbg_reg_x26 = cpuregs[26];$/;"	n
dbg_reg_x27	picorv32.v	/^	wire [31:0] dbg_reg_x27 = cpuregs[27];$/;"	n
dbg_reg_x28	picorv32.v	/^	wire [31:0] dbg_reg_x28 = cpuregs[28];$/;"	n
dbg_reg_x29	picorv32.v	/^	wire [31:0] dbg_reg_x29 = cpuregs[29];$/;"	n
dbg_reg_x3	picorv32.v	/^	wire [31:0] dbg_reg_x3  = cpuregs[3];$/;"	n
dbg_reg_x30	picorv32.v	/^	wire [31:0] dbg_reg_x30 = cpuregs[30];$/;"	n
dbg_reg_x31	picorv32.v	/^	wire [31:0] dbg_reg_x31 = cpuregs[31];$/;"	n
dbg_reg_x4	picorv32.v	/^	wire [31:0] dbg_reg_x4  = cpuregs[4];$/;"	n
dbg_reg_x5	picorv32.v	/^	wire [31:0] dbg_reg_x5  = cpuregs[5];$/;"	n
dbg_reg_x6	picorv32.v	/^	wire [31:0] dbg_reg_x6  = cpuregs[6];$/;"	n
dbg_reg_x7	picorv32.v	/^	wire [31:0] dbg_reg_x7  = cpuregs[7];$/;"	n
dbg_reg_x8	picorv32.v	/^	wire [31:0] dbg_reg_x8  = cpuregs[8];$/;"	n
dbg_reg_x9	picorv32.v	/^	wire [31:0] dbg_reg_x9  = cpuregs[9];$/;"	n
dbg_valid_insn	picorv32.v	/^	reg dbg_valid_insn;$/;"	r
ddr_rd_edge	spiflash.v	/^	task ddr_rd_edge;$/;"	t
ddr_wr_edge	spiflash.v	/^	task ddr_wr_edge;$/;"	t
debug	picorv32.v	/^  `define debug(debug_command) debug_command$/;"	c
debug	picorv32.v	/^  `define debug(debug_command)$/;"	c
debug_flash_clk	hx8kdemo.v	/^	output debug_flash_clk,$/;"	p
debug_flash_io1	hx8kdemo.v	/^	output debug_flash_io1,$/;"	p
debug_flash_io3	hx8kdemo.v	/^	output debug_flash_io3$/;"	p
debug_ser_rx	hx8kdemo.v	/^	output debug_ser_rx,$/;"	p
decoded_imm	picorv32.v	/^	reg [31:0] decoded_imm, decoded_imm_uj;$/;"	r
decoded_imm_uj	picorv32.v	/^	reg [31:0] decoded_imm, decoded_imm_uj;$/;"	r
decoded_rd	picorv32.v	/^	reg [regindex_bits-1:0] decoded_rd, decoded_rs1, decoded_rs2;$/;"	r
decoded_rs	picorv32.v	/^	reg [regindex_bits-1:0] decoded_rs;$/;"	r
decoded_rs1	picorv32.v	/^	reg [regindex_bits-1:0] decoded_rd, decoded_rs1, decoded_rs2;$/;"	r
decoded_rs2	picorv32.v	/^	reg [regindex_bits-1:0] decoded_rd, decoded_rs1, decoded_rs2;$/;"	r
decoder_pseudo_trigger	picorv32.v	/^	reg decoder_pseudo_trigger;$/;"	r
decoder_pseudo_trigger_q	picorv32.v	/^	reg decoder_pseudo_trigger_q;$/;"	r
decoder_trigger	picorv32.v	/^	reg decoder_trigger;$/;"	r
decoder_trigger_q	picorv32.v	/^	reg decoder_trigger_q;$/;"	r
din_cont	spimemio.v	/^	reg        din_cont;$/;"	r
din_data	spimemio.v	/^	reg  [7:0] din_data;$/;"	r
din_ddr	spimemio.v	/^	input            din_ddr,$/;"	p
din_ddr	spimemio.v	/^	reg        din_ddr;$/;"	r
din_dspi	spimemio.v	/^	input            din_dspi,$/;"	p
din_qspi	spimemio.v	/^	reg        din_qspi;$/;"	r
din_rd	spimemio.v	/^	reg        din_rd;$/;"	r
din_ready	spimemio.v	/^	output           din_ready,$/;"	p
din_ready	spimemio.v	/^	wire       din_ready;$/;"	n
din_tag	spimemio.v	/^	input      [3:0] din_tag,$/;"	p
din_tag	spimemio.v	/^	reg  [3:0] din_tag;$/;"	r
din_valid	spimemio.v	/^	reg        din_valid;$/;"	r
dividend	picorv32.v	/^	reg [31:0] dividend;$/;"	r
divisor	picorv32.v	/^	reg [62:0] divisor;$/;"	r
do_waitirq	picorv32.v	/^	reg do_waitirq;$/;"	r
doe	fpga_pin_model.v	/^    input doe,$/;"	p
dout_data	spimemio.v	/^	wire [7:0] dout_data;$/;"	n
dout_tag	spimemio.v	/^	output     [3:0] dout_tag,$/;"	p
dout_tag	spimemio.v	/^	wire [3:0] dout_tag;$/;"	n
dout_valid	spimemio.v	/^	output           dout_valid,$/;"	p
dout_valid	spimemio.v	/^	wire       dout_valid;$/;"	n
dummy_count	spimemio.v	/^	reg [3:0] dummy_count;$/;"	r
dummycount	spiflash.v	/^	integer dummycount = 0;$/;"	r
empty_statement	picorv32.v	/^	task empty_statement;$/;"	t
eoi	picorv32.v	/^	output [31:0] eoi,$/;"	p
fetch	spimemio.v	/^	reg fetch;$/;"	r
flash_clk	hx8kdemo.v	/^	output flash_clk,$/;"	p
flash_clk	hx8kdemo_tb.v	/^	wire flash_clk;$/;"	n
flash_clk	picosoc.v	/^	output flash_clk,$/;"	p
flash_clk	zebu_tb.v	/^    wire flash_clk;$/;"	n
flash_csb	hx8kdemo_tb.v	/^	wire flash_csb;$/;"	n
flash_csb	spimemio.v	/^	output flash_csb,$/;"	p
flash_csb	zebu_tb.v	/^    wire flash_csb;$/;"	n
flash_io0	hx8kdemo_tb.v	/^	wire flash_io0;$/;"	n
flash_io0	zebu_tb.v	/^    wire flash_io0;$/;"	n
flash_io0_di	hx8kdemo.v	/^	wire flash_io0_oe, flash_io0_do, flash_io0_di;$/;"	n
flash_io0_di	spimemio.v	/^	input      flash_io0_di,$/;"	p
flash_io0_di	spimemio.v	/^	input  flash_io0_di,$/;"	p
flash_io0_do	hx8kdemo.v	/^	wire flash_io0_oe, flash_io0_do, flash_io0_di;$/;"	n
flash_io0_do	spimemio.v	/^	output flash_io0_do,$/;"	p
flash_io0_oe	hx8kdemo.v	/^	wire flash_io0_oe, flash_io0_do, flash_io0_di;$/;"	n
flash_io0_oe	spimemio.v	/^	output flash_io0_oe,$/;"	p
flash_io1	hx8kdemo.v	/^	inout  flash_io1,$/;"	p
flash_io1	hx8kdemo_tb.v	/^	wire flash_io1;$/;"	n
flash_io1	zebu_tb.v	/^    wire flash_io1;$/;"	n
flash_io1_di	hx8kdemo.v	/^	wire flash_io1_oe, flash_io1_do, flash_io1_di;$/;"	n
flash_io1_di	picosoc.v	/^	input  flash_io1_di,$/;"	p
flash_io1_do	hx8kdemo.v	/^	wire flash_io1_oe, flash_io1_do, flash_io1_di;$/;"	n
flash_io1_do	picosoc.v	/^	output flash_io1_do,$/;"	p
flash_io1_oe	hx8kdemo.v	/^	wire flash_io1_oe, flash_io1_do, flash_io1_di;$/;"	n
flash_io1_oe	picosoc.v	/^	output flash_io1_oe,$/;"	p
flash_io2	hx8kdemo_tb.v	/^	wire flash_io2;$/;"	n
flash_io2	zebu_tb.v	/^    wire flash_io2;$/;"	n
flash_io2_di	hx8kdemo.v	/^	wire flash_io2_oe, flash_io2_do, flash_io2_di;$/;"	n
flash_io2_di	spimemio.v	/^	input      flash_io2_di,$/;"	p
flash_io2_di	spimemio.v	/^	input  flash_io2_di,$/;"	p
flash_io2_do	hx8kdemo.v	/^	wire flash_io2_oe, flash_io2_do, flash_io2_di;$/;"	n
flash_io2_do	spimemio.v	/^	output flash_io2_do,$/;"	p
flash_io2_oe	hx8kdemo.v	/^	wire flash_io2_oe, flash_io2_do, flash_io2_di;$/;"	n
flash_io2_oe	spimemio.v	/^	output flash_io2_oe,$/;"	p
flash_io3	hx8kdemo.v	/^	inout  flash_io3,$/;"	p
flash_io3	hx8kdemo_tb.v	/^	wire flash_io3;$/;"	n
flash_io3	zebu_tb.v	/^    wire flash_io3;$/;"	n
flash_io3_di	hx8kdemo.v	/^	wire flash_io3_oe, flash_io3_do, flash_io3_di;$/;"	n
flash_io3_di	picosoc.v	/^	input  flash_io3_di$/;"	p
flash_io3_do	hx8kdemo.v	/^	wire flash_io3_oe, flash_io3_do, flash_io3_di;$/;"	n
flash_io3_do	picosoc.v	/^	output flash_io3_do,$/;"	p
flash_io3_oe	hx8kdemo.v	/^	wire flash_io3_oe, flash_io3_do, flash_io3_di;$/;"	n
flash_io3_oe	picosoc.v	/^	output flash_io3_oe,$/;"	p
fpga_pin_model	fpga_pin_model.v	/^module fpga_pin_model($/;"	m
gpio	hx8kdemo.v	/^	reg [31:0] gpio;$/;"	r
hx8kdemo	hx8kdemo.v	/^module hx8kdemo ($/;"	m
i	picorv32.v	/^	integer i, j;$/;"	r
i	picorv32.v	/^	integer i;$/;"	r
ibuffer	spimemio.v	/^	reg [7:0] ibuffer;$/;"	r
ind	fpga_pin_model.v	/^    output ind,$/;"	p
inout	fpga_pin_model.v	/^    inout pin$/;"	p
inout	hx8kdemo.v	/^	inout  flash_io0,$/;"	p
inout	hx8kdemo.v	/^	inout  flash_io2,$/;"	p
inout	spiflash.v	/^	inout io1, \/\/ MISO$/;"	p
inout	spiflash.v	/^	inout io3$/;"	p
input	fpga_pin_model.v	/^    input pdo,$/;"	p
input	hx8kdemo.v	/^	input nrst,$/;"	p
input	picorv32.v	/^	input             pcpi_ready,$/;"	p
input	picorv32.v	/^	input             pcpi_valid,$/;"	c
input	picorv32.v	/^	input             pcpi_valid,$/;"	p
input	picorv32.v	/^	input         mem_axi_arready,$/;"	p
input	picorv32.v	/^	input         mem_axi_awready,$/;"	p
input	picorv32.v	/^	input         mem_axi_bvalid,$/;"	p
input	picorv32.v	/^	input         mem_axi_rvalid,$/;"	p
input	picorv32.v	/^	input         mem_axi_wready,$/;"	p
input	picorv32.v	/^	input         mem_instr,$/;"	p
input	picorv32.v	/^	input         pcpi_ready,$/;"	p
input	picorv32.v	/^	input         pcpi_wait,$/;"	p
input	picorv32.v	/^	input         pcpi_wr,$/;"	p
input	picorv32.v	/^	input      [31:0] pcpi_rd,$/;"	p
input	picorv32.v	/^	input      [31:0] pcpi_rs1,$/;"	p
input	picorv32.v	/^	input  [ 3:0] mem_wstrb,$/;"	p
input	picorv32.v	/^	input  [31:0] irq,$/;"	p
input	picorv32.v	/^	input  [31:0] mem_addr,$/;"	p
input	picorv32.v	/^	input  [31:0] mem_axi_rdata,$/;"	p
input	picorv32.v	/^	input  [31:0] pcpi_rd,$/;"	p
input	picorv32.v	/^	input [5:0] raddr2,$/;"	p
input	picorv32.v	/^	input [5:0] waddr,$/;"	p
input	picorv32.v	/^	input wb_rst_i,$/;"	c
input	picosoc.v	/^	input         iomem_ready,$/;"	p
input	picosoc.v	/^	input  [31:0] iomem_rdata,$/;"	p
input	picosoc.v	/^	input  flash_io0_di,$/;"	p
input	picosoc.v	/^	input  flash_io2_di,$/;"	p
input	picosoc.v	/^	input  irq_6,$/;"	p
input	picosoc.v	/^	input [31:0] wdata,$/;"	p
input	picosoc.v	/^	input [3:0] wen,$/;"	p
input	picosoc.v	/^	input [5:0] raddr2,$/;"	p
input	picosoc.v	/^	input [5:0] waddr,$/;"	p
input	picosoc.v	/^	input resetn,$/;"	p
input	simpleuart.v	/^	input         reg_dat_we,$/;"	p
input	simpleuart.v	/^	input  [31:0] reg_dat_di,$/;"	p
input	simpleuart.v	/^	input  [31:0] reg_div_di,$/;"	p
input	simpleuart.v	/^	input  ser_rx,$/;"	p
input	simpleuart.v	/^	input resetn,$/;"	p
input	spiflash.v	/^	input clk,$/;"	p
input	spimemio.v	/^	input            din_cont,$/;"	p
input	spimemio.v	/^	input            din_qspi,$/;"	p
input	spimemio.v	/^	input            din_rd,$/;"	p
input	spimemio.v	/^	input            din_valid,$/;"	p
input	spimemio.v	/^	input      [7:0] din_data,$/;"	p
input	spimemio.v	/^	input      flash_io1_di,$/;"	p
input	spimemio.v	/^	input      flash_io3_di$/;"	p
input	spimemio.v	/^	input  [31:0] cfgreg_di,$/;"	p
input	spimemio.v	/^	input  flash_io1_di,$/;"	p
input	spimemio.v	/^	input  flash_io3_di,$/;"	p
input	spimemio.v	/^	input [23:0] addr,$/;"	p
input	spimemio.v	/^	input valid,$/;"	p
instr_add	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_addi	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_and	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_andi	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_any_div_rem	picorv32.v	/^	wire instr_any_div_rem = |{instr_div, instr_divu, instr_rem, instr_remu};$/;"	n
instr_any_mul	picorv32.v	/^	wire instr_any_mul = |{instr_mul, instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_any_mulh	picorv32.v	/^	wire instr_any_mulh = |{instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_auipc	picorv32.v	/^	reg instr_lui, instr_auipc, instr_jal, instr_jalr;$/;"	r
instr_beq	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_bge	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_bgeu	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_blt	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_bltu	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_bne	picorv32.v	/^	reg instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu;$/;"	r
instr_div	picorv32.v	/^	reg instr_div, instr_divu, instr_rem, instr_remu;$/;"	r
instr_divu	picorv32.v	/^	reg instr_div, instr_divu, instr_rem, instr_remu;$/;"	r
instr_divu	picorv32.v	/^	wire instr_any_div_rem = |{instr_div, instr_divu, instr_rem, instr_remu};$/;"	n
instr_ecall_ebreak	picorv32.v	/^	reg instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_ecall_ebreak;$/;"	r
instr_getq	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_jal	picorv32.v	/^	reg instr_lui, instr_auipc, instr_jal, instr_jalr;$/;"	r
instr_jalr	picorv32.v	/^	reg instr_lui, instr_auipc, instr_jal, instr_jalr;$/;"	r
instr_lb	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_lbu	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_lh	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_lhu	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_lui	picorv32.v	/^	reg instr_lui, instr_auipc, instr_jal, instr_jalr;$/;"	r
instr_lw	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_maskirq	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_mul	picorv32.v	/^	reg instr_mul, instr_mulh, instr_mulhsu, instr_mulhu;$/;"	r
instr_mulh	picorv32.v	/^	reg instr_mul, instr_mulh, instr_mulhsu, instr_mulhu;$/;"	r
instr_mulh	picorv32.v	/^	wire instr_any_mul = |{instr_mul, instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_mulhsu	picorv32.v	/^	reg instr_mul, instr_mulh, instr_mulhsu, instr_mulhu;$/;"	r
instr_mulhsu	picorv32.v	/^	wire instr_any_mul = |{instr_mul, instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_mulhsu	picorv32.v	/^	wire instr_any_mulh = |{instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_mulhsu	picorv32.v	/^	wire instr_rs1_signed = |{instr_mulh, instr_mulhsu};$/;"	n
instr_mulhu	picorv32.v	/^	reg instr_mul, instr_mulh, instr_mulhsu, instr_mulhu;$/;"	r
instr_mulhu	picorv32.v	/^	wire instr_any_mul = |{instr_mul, instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_mulhu	picorv32.v	/^	wire instr_any_mulh = |{instr_mulh, instr_mulhsu, instr_mulhu};$/;"	n
instr_or	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_ori	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_rdcycle	picorv32.v	/^	reg instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_ecall_ebreak;$/;"	r
instr_rdcycleh	picorv32.v	/^	reg instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_ecall_ebreak;$/;"	r
instr_rdinstr	picorv32.v	/^	reg instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_ecall_ebreak;$/;"	r
instr_rdinstrh	picorv32.v	/^	reg instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_ecall_ebreak;$/;"	r
instr_rem	picorv32.v	/^	reg instr_div, instr_divu, instr_rem, instr_remu;$/;"	r
instr_rem	picorv32.v	/^	wire instr_any_div_rem = |{instr_div, instr_divu, instr_rem, instr_remu};$/;"	n
instr_remu	picorv32.v	/^	reg instr_div, instr_divu, instr_rem, instr_remu;$/;"	r
instr_remu	picorv32.v	/^	wire instr_any_div_rem = |{instr_div, instr_divu, instr_rem, instr_remu};$/;"	n
instr_retirq	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_rs1_signed	picorv32.v	/^	wire instr_rs1_signed = |{instr_mulh, instr_mulhsu};$/;"	n
instr_rs2_signed	picorv32.v	/^	wire instr_rs2_signed = |{instr_mulh};$/;"	n
instr_sb	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_setq	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_sh	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_sll	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_slli	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_slt	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_slti	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_sltiu	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_sltu	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_sra	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_srai	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_srl	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_srli	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
instr_sub	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_sw	picorv32.v	/^	reg instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw;$/;"	r
instr_timer	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_trap	picorv32.v	/^	wire instr_trap;$/;"	n
instr_waitirq	picorv32.v	/^	reg instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer;$/;"	r
instr_xor	picorv32.v	/^	reg instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and;$/;"	r
instr_xori	picorv32.v	/^	reg instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai;$/;"	r
integer	picosoc.v	/^	parameter integer MEM_WORDS = 256;$/;"	c
integer	picosoc.v	/^	parameter integer WORDS = 256$/;"	c
io0	spiflash.v	/^	inout io0, \/\/ MOSI$/;"	p
io0_delayed	spiflash.v	/^	wire io0_delayed;$/;"	n
io0_dout	spiflash.v	/^	reg io0_dout = 0;$/;"	r
io0_oe	spiflash.v	/^	reg io0_oe = 0;$/;"	r
io1_delayed	spiflash.v	/^	wire io1_delayed;$/;"	n
io1_dout	spiflash.v	/^	reg io1_dout = 0;$/;"	r
io1_oe	spiflash.v	/^	reg io1_oe = 0;$/;"	r
io2	spiflash.v	/^	inout io2,$/;"	p
io2_delayed	spiflash.v	/^	wire io2_delayed;$/;"	n
io2_dout	spiflash.v	/^	reg io2_dout = 0;$/;"	r
io2_oe	spiflash.v	/^	reg io2_oe = 0;$/;"	r
io3_delayed	spiflash.v	/^	wire io3_delayed;$/;"	n
io3_dout	spiflash.v	/^	reg io3_dout = 0;$/;"	r
io3_oe	spiflash.v	/^	reg io3_oe = 0;$/;"	r
iomem_addr	hx8kdemo.v	/^	wire [31:0] iomem_addr;$/;"	n
iomem_rdata	hx8kdemo.v	/^	reg  [31:0] iomem_rdata;$/;"	r
iomem_ready	hx8kdemo.v	/^	reg         iomem_ready;$/;"	r
iomem_valid	hx8kdemo.v	/^	wire        iomem_valid;$/;"	n
iomem_valid	picosoc.v	/^	output        iomem_valid,$/;"	p
iomem_wdata	hx8kdemo.v	/^	wire [31:0] iomem_wdata;$/;"	n
iomem_wdata	picosoc.v	/^	output [31:0] iomem_wdata,$/;"	p
iomem_wstrb	hx8kdemo.v	/^	wire [3:0]  iomem_wstrb;$/;"	n
iomem_wstrb	picosoc.v	/^	output [ 3:0] iomem_wstrb,$/;"	p
irq	picorv32.v	/^	input      [31:0] irq,$/;"	p
irq	picorv32.v	/^	input  [31:0] irq,$/;"	p
irq	picosoc.v	/^	reg [31:0] irq;$/;"	r
irq_5	picosoc.v	/^	input  irq_5,$/;"	p
irq_7	picosoc.v	/^	input  irq_7,$/;"	p
irq_active	picorv32.v	/^	reg irq_active;$/;"	r
irq_delay	picorv32.v	/^	reg irq_delay;$/;"	r
irq_mask	picorv32.v	/^	reg [31:0] irq_mask;$/;"	r
irq_pending	picorv32.v	/^	reg [31:0] irq_pending;$/;"	r
irq_stall	picosoc.v	/^	wire irq_stall = 0;$/;"	n
irq_state	picorv32.v	/^	reg [1:0] irq_state;$/;"	r
irq_uart	picosoc.v	/^	wire irq_uart = 0;$/;"	n
is_alu_reg_imm	picorv32.v	/^	reg is_alu_reg_imm;$/;"	r
is_alu_reg_reg	picorv32.v	/^	reg is_alu_reg_reg;$/;"	r
is_beq_bne_blt_bge_bltu_bgeu	picorv32.v	/^	reg is_beq_bne_blt_bge_bltu_bgeu;$/;"	r
is_compare	picorv32.v	/^	reg is_compare;$/;"	r
is_jalr_addi_slti_sltiu_xori_ori_andi	picorv32.v	/^	reg is_jalr_addi_slti_sltiu_xori_ori_andi;$/;"	r
is_lb_lh_lw_lbu_lhu	picorv32.v	/^	reg is_lb_lh_lw_lbu_lhu;$/;"	r
is_lbu_lhu_lw	picorv32.v	/^	reg is_lbu_lhu_lw;$/;"	r
is_lui_auipc_jal	picorv32.v	/^	reg is_lui_auipc_jal;$/;"	r
is_lui_auipc_jal_jalr_addi_add_sub	picorv32.v	/^	reg is_lui_auipc_jal_jalr_addi_add_sub;$/;"	r
is_rdcycle_rdcycleh_rdinstr_rdinstrh	picorv32.v	/^	wire is_rdcycle_rdcycleh_rdinstr_rdinstrh;$/;"	n
is_sb_sh_sw	picorv32.v	/^	reg is_sb_sh_sw;$/;"	r
is_sll_srl_sra	picorv32.v	/^	reg is_sll_srl_sra;$/;"	r
is_slli_srli_srai	picorv32.v	/^	reg is_slli_srli_srai;$/;"	r
is_slti_blt_slt	picorv32.v	/^	reg is_slti_blt_slt;$/;"	r
is_sltiu_bltu_sltu	picorv32.v	/^	reg is_sltiu_bltu_sltu;$/;"	r
j	picorv32.v	/^	integer i, j;$/;"	r
jump	spimemio.v	/^	wire jump = valid && !ready && (addr != rd_addr+4) && rd_valid;$/;"	n
last_fetch	spimemio.v	/^	reg last_fetch;$/;"	r
last_mem_la_addr	picorv32.v	/^	reg [31:0] last_mem_la_addr;$/;"	r
last_mem_la_read	picorv32.v	/^	reg last_mem_la_read = 0;$/;"	r
last_mem_la_wdata	picorv32.v	/^	reg [31:0] last_mem_la_wdata;$/;"	r
last_mem_la_write	picorv32.v	/^	reg last_mem_la_write = 0;$/;"	r
last_mem_la_wstrb	picorv32.v	/^	reg [3:0] last_mem_la_wstrb = 0;$/;"	r
last_mem_nowait	picorv32.v	/^	reg [3:0] last_mem_nowait;$/;"	r
last_mem_valid	picorv32.v	/^	reg mem_la_secondword, mem_la_firstword_reg, last_mem_valid;$/;"	r
latched_branch	picorv32.v	/^	reg latched_branch;$/;"	r
latched_compr	picorv32.v	/^	reg latched_compr;$/;"	r
latched_is_lb	picorv32.v	/^	reg latched_is_lb;$/;"	r
latched_is_lh	picorv32.v	/^	reg latched_is_lh;$/;"	r
latched_is_lu	picorv32.v	/^	reg latched_is_lu;$/;"	r
latched_rd	picorv32.v	/^	reg [regindex_bits-1:0] latched_rd;$/;"	r
latched_stalu	picorv32.v	/^	reg latched_stalu;$/;"	r
latched_store	picorv32.v	/^	reg latched_store;$/;"	r
latched_trace	picorv32.v	/^	reg latched_trace;$/;"	r
launch_next_insn	picorv32.v	/^	wire launch_next_insn;$/;"	n
leds	hx8kdemo.v	/^	output [7:0] leds,$/;"	p
leds	hx8kdemo_tb.v	/^	wire [7:0] leds;$/;"	n
mem	picosoc.v	/^	reg [31:0] mem [0:WORDS-1];$/;"	r
mem_16bit_buffer	picorv32.v	/^	reg [15:0] mem_16bit_buffer;$/;"	r
mem_addr	picorv32.v	/^	wire [31:0] mem_addr;$/;"	n
mem_addr	picosoc.v	/^	wire [31:0] mem_addr;$/;"	n
mem_axi_araddr	picorv32.v	/^	output [31:0] mem_axi_araddr,$/;"	p
mem_axi_arprot	picorv32.v	/^	output [ 2:0] mem_axi_arprot,$/;"	p
mem_axi_arready	picorv32.v	/^	input         mem_axi_arready,$/;"	p
mem_axi_arvalid	picorv32.v	/^	output        mem_axi_arvalid,$/;"	p
mem_axi_awaddr	picorv32.v	/^	output [31:0] mem_axi_awaddr,$/;"	p
mem_axi_awprot	picorv32.v	/^	output [ 2:0] mem_axi_awprot,$/;"	p
mem_axi_awready	picorv32.v	/^	input         mem_axi_awready,$/;"	p
mem_axi_awvalid	picorv32.v	/^	output        mem_axi_awvalid,$/;"	p
mem_axi_bready	picorv32.v	/^	output        mem_axi_bready,$/;"	p
mem_axi_bvalid	picorv32.v	/^	input         mem_axi_bvalid,$/;"	p
mem_axi_rdata	picorv32.v	/^	input  [31:0] mem_axi_rdata,$/;"	p
mem_axi_rready	picorv32.v	/^	output        mem_axi_rready,$/;"	p
mem_axi_rvalid	picorv32.v	/^	input         mem_axi_rvalid,$/;"	p
mem_axi_wdata	picorv32.v	/^	output [31:0] mem_axi_wdata,$/;"	p
mem_axi_wready	picorv32.v	/^	input         mem_axi_wready,$/;"	p
mem_axi_wstrb	picorv32.v	/^	output [ 3:0] mem_axi_wstrb,$/;"	p
mem_axi_wvalid	picorv32.v	/^	output        mem_axi_wvalid,$/;"	p
mem_busy	picorv32.v	/^	wire mem_busy = |{mem_do_prefetch, mem_do_rinst, mem_do_rdata, mem_do_wdata};$/;"	n
mem_do_prefetch	picorv32.v	/^	reg mem_do_prefetch;$/;"	r
mem_do_rdata	picorv32.v	/^	reg mem_do_rdata;$/;"	r
mem_do_rdata	picorv32.v	/^	wire mem_busy = |{mem_do_prefetch, mem_do_rinst, mem_do_rdata, mem_do_wdata};$/;"	n
mem_do_rinst	picorv32.v	/^	reg mem_do_rinst;$/;"	r
mem_do_rinst	picorv32.v	/^	wire mem_busy = |{mem_do_prefetch, mem_do_rinst, mem_do_rdata, mem_do_wdata};$/;"	n
mem_do_wdata	picorv32.v	/^	reg mem_do_wdata;$/;"	r
mem_do_wdata	picorv32.v	/^	wire mem_busy = |{mem_do_prefetch, mem_do_rinst, mem_do_rdata, mem_do_wdata};$/;"	n
mem_done	picorv32.v	/^	wire mem_done = resetn && ((mem_xfer && |mem_state && (mem_do_rinst || mem_do_rdata || mem_do_wdata)) || (&mem_state && mem_do_rinst)) &&$/;"	n
mem_instr	picorv32.v	/^	wire        mem_instr;$/;"	n
mem_instr	picosoc.v	/^	wire mem_instr;$/;"	n
mem_la_firstword	picorv32.v	/^	wire mem_la_firstword = COMPRESSED_ISA && (mem_do_prefetch || mem_do_rinst) && next_pc[1] && !mem_la_secondword;$/;"	n
mem_la_firstword_reg	picorv32.v	/^	reg mem_la_secondword, mem_la_firstword_reg, last_mem_valid;$/;"	r
mem_la_firstword_xfer	picorv32.v	/^	wire mem_la_firstword_xfer = COMPRESSED_ISA && mem_xfer && (!last_mem_valid ? mem_la_firstword : mem_la_firstword_reg);$/;"	n
mem_la_secondword	picorv32.v	/^	reg mem_la_secondword, mem_la_firstword_reg, last_mem_valid;$/;"	r
mem_la_use_prefetched_high_word	picorv32.v	/^	wire mem_la_use_prefetched_high_word = COMPRESSED_ISA && mem_la_firstword && prefetched_high_word && !clear_prefetched_high_word;$/;"	n
mem_la_write	picorv32.v	/^	output            mem_la_write,$/;"	p
mem_rdata	picorv32.v	/^	input      [31:0] mem_rdata,$/;"	p
mem_rdata	picorv32.v	/^	output [31:0] mem_rdata$/;"	p
mem_rdata	picorv32.v	/^	reg [31:0] mem_rdata;$/;"	r
mem_rdata	picorv32.v	/^	wire [31:0] mem_rdata;$/;"	n
mem_rdata	picosoc.v	/^	wire [31:0] mem_rdata;$/;"	n
mem_rdata_latched	picorv32.v	/^	wire [31:0] mem_rdata_latched;$/;"	n
mem_rdata_latched_noshuffle	picorv32.v	/^	wire [31:0] mem_rdata_latched_noshuffle;$/;"	n
mem_rdata_q	picorv32.v	/^	reg [31:0] mem_rdata_q;$/;"	r
mem_rdata_word	picorv32.v	/^	reg [31:0] mem_rdata_word;$/;"	r
mem_ready	picorv32.v	/^	input             mem_ready,$/;"	p
mem_ready	picorv32.v	/^	output        mem_ready,$/;"	p
mem_ready	picorv32.v	/^	reg         mem_ready;$/;"	r
mem_ready	picorv32.v	/^	wire        mem_ready;$/;"	n
mem_ready	picosoc.v	/^	wire mem_ready;$/;"	n
mem_state	picorv32.v	/^	reg [1:0] mem_state;$/;"	r
mem_valid	picorv32.v	/^	input         mem_valid,$/;"	p
mem_valid	picorv32.v	/^	wire        mem_valid;$/;"	n
mem_valid	picosoc.v	/^	wire mem_valid;$/;"	n
mem_wdata	picorv32.v	/^	input  [31:0] mem_wdata,$/;"	p
mem_wdata	picorv32.v	/^	wire [31:0] mem_wdata;$/;"	n
mem_wdata	picosoc.v	/^	wire [31:0] mem_wdata;$/;"	n
mem_wordsize	picorv32.v	/^	reg [1:0] mem_wordsize;$/;"	r
mem_wstrb	picorv32.v	/^	wire [ 3:0] mem_wstrb;$/;"	n
mem_wstrb	picosoc.v	/^	wire [3:0] mem_wstrb;$/;"	n
mem_xfer	picorv32.v	/^	wire mem_xfer;$/;"	n
memory	spiflash.v	/^	reg [7:0] memory [0:2*1024*1024-1];$/;"	r
mode	spiflash.v	/^	reg [3:0] mode = 0;$/;"	r
mul_counter	picorv32.v	/^	reg [6:0] mul_counter;$/;"	r
mul_finish	picorv32.v	/^	reg mul_finish;$/;"	r
mul_start	picorv32.v	/^	wire mul_start = pcpi_wait && !pcpi_wait_q;$/;"	n
mul_waiting	picorv32.v	/^	reg mul_waiting;$/;"	r
new_ascii_instr	picorv32.v	/^	reg [63:0] new_ascii_instr;$/;"	r
next_count	spimemio.v	/^	reg [3:0] next_count;$/;"	r
next_fetch	spimemio.v	/^	reg next_fetch;$/;"	r
next_ibuffer	spimemio.v	/^	reg [7:0] next_ibuffer;$/;"	r
next_insn_opcode	picorv32.v	/^	reg [31:0] next_insn_opcode;$/;"	r
next_irq_pending	picorv32.v	/^	reg [31:0] next_irq_pending;$/;"	r
next_mode	spiflash.v	/^	reg [3:0] next_mode = 0;$/;"	r
next_obuffer	spimemio.v	/^	reg [7:0] next_obuffer;$/;"	r
next_pc	picorv32.v	/^	wire [31:0] next_pc;$/;"	n
next_rd	picorv32.v	/^	reg [63:0] next_rd, next_rdx, next_rdt;$/;"	r
next_rdt	picorv32.v	/^	reg [63:0] next_rd, next_rdx, next_rdt;$/;"	r
next_rdx	picorv32.v	/^	reg [63:0] next_rd, next_rdx, next_rdt;$/;"	r
next_rs1	picorv32.v	/^	reg [63:0] next_rs1, next_rs2, this_rs2;$/;"	r
next_rs2	picorv32.v	/^	reg [63:0] next_rs1, next_rs2, this_rs2;$/;"	r
nrst	zebu_tb.v	/^    wire nrst;$/;"	n
obuffer	spimemio.v	/^	reg [7:0] obuffer;$/;"	r
ok	picorv32.v	/^	reg ok;$/;"	r
output	hx8kdemo.v	/^	output debug_flash_csb,$/;"	p
output	hx8kdemo.v	/^	output debug_flash_io0,$/;"	p
output	hx8kdemo.v	/^	output debug_flash_io2,$/;"	p
output	hx8kdemo.v	/^	output debug_ser_tx,$/;"	p
output	hx8kdemo.v	/^	output flash_csb,$/;"	p
output	hx8kdemo.v	/^	output ser_tx,$/;"	p
output	picorv32.v	/^	output            mem_la_read,$/;"	p
output	picorv32.v	/^	output            pcpi_wait,$/;"	p
output	picorv32.v	/^	output            pcpi_wr,$/;"	p
output	picorv32.v	/^	output        mem_axi_arvalid,$/;"	p
output	picorv32.v	/^	output        mem_axi_awvalid,$/;"	p
output	picorv32.v	/^	output        mem_axi_bready,$/;"	p
output	picorv32.v	/^	output        mem_axi_rready,$/;"	p
output	picorv32.v	/^	output        mem_axi_wvalid,$/;"	p
output	picorv32.v	/^	output        pcpi_valid,$/;"	p
output	picorv32.v	/^	output        rvfi_intr,$/;"	p
output	picorv32.v	/^	output        rvfi_trap,$/;"	p
output	picorv32.v	/^	output     [31:0] mem_la_addr,$/;"	p
output	picorv32.v	/^	output     [31:0] pcpi_rs2,$/;"	p
output	picorv32.v	/^	output [ 2:0] mem_axi_arprot,$/;"	p
output	picorv32.v	/^	output [ 2:0] mem_axi_awprot,$/;"	p
output	picorv32.v	/^	output [ 3:0] mem_axi_wstrb,$/;"	p
output	picorv32.v	/^	output [ 3:0] rvfi_mem_rmask,$/;"	p
output	picorv32.v	/^	output [ 4:0] rvfi_rs2_addr,$/;"	p
output	picorv32.v	/^	output [31:0] eoi,$/;"	p
output	picorv32.v	/^	output [31:0] mem_axi_araddr,$/;"	p
output	picorv32.v	/^	output [31:0] mem_axi_awaddr,$/;"	p
output	picorv32.v	/^	output [31:0] mem_axi_wdata,$/;"	p
output	picorv32.v	/^	output [31:0] pcpi_insn,$/;"	p
output	picorv32.v	/^	output [31:0] pcpi_rs1,$/;"	p
output	picorv32.v	/^	output [31:0] pcpi_rs2,$/;"	p
output	picorv32.v	/^	output [31:0] rdata1,$/;"	p
output	picorv32.v	/^	output [31:0] rvfi_mem_rdata,$/;"	p
output	picorv32.v	/^	output [31:0] rvfi_pc_wdata,$/;"	p
output	picorv32.v	/^	output [31:0] rvfi_rd_wdata,$/;"	p
output	picorv32.v	/^	output [31:0] rvfi_rs2_rdata,$/;"	p
output	picorv32.v	/^	output [63:0] rvfi_order,$/;"	p
output	picorv32.v	/^	output mem_instr$/;"	p
output	picorv32.v	/^	output reg        pcpi_wr,$/;"	p
output	picorv32.v	/^	output reg [31:0] eoi,$/;"	p
output	picorv32.v	/^	output reg [31:0] mem_addr,$/;"	p
output	picorv32.v	/^	output reg [31:0] wbm_adr_o,$/;"	p
output	picorv32.v	/^	output reg trap,$/;"	p
output	picorv32.v	/^	output reg wbm_cyc_o,$/;"	p
output	picorv32.v	/^	output reg wbm_we_o,$/;"	p
output	picorv32.v	/^	output trap,$/;"	c
output	picosoc.v	/^	output [31:0] iomem_addr,$/;"	p
output	picosoc.v	/^	output [31:0] rdata1,$/;"	p
output	picosoc.v	/^	output flash_csb,$/;"	p
output	picosoc.v	/^	output flash_io0_do,$/;"	p
output	picosoc.v	/^	output flash_io0_oe,$/;"	p
output	picosoc.v	/^	output flash_io2_do,$/;"	p
output	picosoc.v	/^	output flash_io2_oe,$/;"	p
output	picosoc.v	/^	output ser_tx,$/;"	p
output	simpleuart.v	/^	output        reg_dat_wait$/;"	p
output	spimemio.v	/^	output     [7:0] dout_data,$/;"	p
output	spimemio.v	/^	output flash_clk,$/;"	p
output	spimemio.v	/^	output flash_io1_do,$/;"	p
output	spimemio.v	/^	output flash_io1_oe,$/;"	p
output	spimemio.v	/^	output flash_io3_do,$/;"	p
output	spimemio.v	/^	output flash_io3_oe,$/;"	p
output	spimemio.v	/^	output reg flash_csb,$/;"	p
outsign	picorv32.v	/^	reg outsign;$/;"	r
parameter	picorv32.v	/^	parameter CARRY_CHAIN = 4$/;"	c
parameter	picorv32.v	/^	parameter EXTRA_INSN_FFS = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] BARREL_SHIFTER = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] CATCH_ILLINSN = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] CATCH_MISALIGN = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] COMPRESSED_ISA = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_COUNTERS64 = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_DIV = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_FAST_MUL = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ_QREGS = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_IRQ_TIMER = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_MUL = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_PCPI = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_REGS_DUALPORT = 1,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] ENABLE_TRACE = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] REGS_INIT_ZERO = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] TWO_CYCLE_ALU = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] TWO_CYCLE_COMPARE = 0,$/;"	c
parameter	picorv32.v	/^	parameter [ 0:0] TWO_STAGE_SHIFT = 1,$/;"	c
parameter	picorv32.v	/^	parameter [31:0] LATCHED_IRQ = 32'h ffff_ffff,$/;"	c
parameter	picorv32.v	/^	parameter [31:0] MASKED_IRQ = 32'h 0000_0000,$/;"	c
parameter	picorv32.v	/^	parameter [31:0] PROGADDR_IRQ = 32'h 0000_0010,$/;"	c
parameter	picorv32.v	/^	parameter [31:0] PROGADDR_RESET = 32'h 0000_0000,$/;"	c
parameter	picorv32.v	/^	parameter [31:0] STACKADDR = 32'h ffff_ffff$/;"	c
pcpi_div_rd	picorv32.v	/^	wire [31:0] pcpi_div_rd;$/;"	n
pcpi_div_ready	picorv32.v	/^	wire        pcpi_div_ready;$/;"	n
pcpi_div_wait	picorv32.v	/^	wire        pcpi_div_wait;$/;"	n
pcpi_div_wr	picorv32.v	/^	wire        pcpi_div_wr;$/;"	n
pcpi_insn	picorv32.v	/^	input      [31:0] pcpi_insn,$/;"	p
pcpi_insn	picorv32.v	/^	output [31:0] pcpi_insn,$/;"	p
pcpi_insn_valid	picorv32.v	/^	wire pcpi_insn_valid = pcpi_valid && pcpi_insn[6:0] == 7'b0110011 && pcpi_insn[31:25] == 7'b0000001;$/;"	n
pcpi_insn_valid_q	picorv32.v	/^	reg pcpi_insn_valid_q;$/;"	r
pcpi_int_rd	picorv32.v	/^	reg [31:0] pcpi_int_rd;$/;"	r
pcpi_int_ready	picorv32.v	/^	reg        pcpi_int_ready;$/;"	r
pcpi_int_wait	picorv32.v	/^	reg        pcpi_int_wait;$/;"	r
pcpi_int_wr	picorv32.v	/^	reg        pcpi_int_wr;$/;"	r
pcpi_mul_rd	picorv32.v	/^	wire [31:0] pcpi_mul_rd;$/;"	n
pcpi_mul_ready	picorv32.v	/^	wire        pcpi_mul_ready;$/;"	n
pcpi_mul_wait	picorv32.v	/^	wire        pcpi_mul_wait;$/;"	n
pcpi_mul_wr	picorv32.v	/^	wire        pcpi_mul_wr;$/;"	n
pcpi_rd	picorv32.v	/^	input  [31:0] pcpi_rd,$/;"	p
pcpi_rd	picorv32.v	/^	output     [31:0] pcpi_rd,$/;"	p
pcpi_ready	picorv32.v	/^	input         pcpi_ready,$/;"	p
pcpi_ready	picorv32.v	/^	output            pcpi_ready$/;"	p
pcpi_rs1	picorv32.v	/^	output     [31:0] pcpi_rs1,$/;"	p
pcpi_rs1	picorv32.v	/^	output [31:0] pcpi_rs1,$/;"	p
pcpi_rs2	picorv32.v	/^	input      [31:0] pcpi_rs2,$/;"	p
pcpi_rs2	picorv32.v	/^	output [31:0] pcpi_rs2,$/;"	p
pcpi_timeout	picorv32.v	/^	reg pcpi_timeout;$/;"	r
pcpi_timeout_counter	picorv32.v	/^	reg [3:0] pcpi_timeout_counter;$/;"	r
pcpi_valid	picorv32.v	/^	output        pcpi_valid,$/;"	p
pcpi_wait	picorv32.v	/^	input             pcpi_wait,$/;"	p
pcpi_wait	picorv32.v	/^	input         pcpi_wait,$/;"	p
pcpi_wait_q	picorv32.v	/^	reg pcpi_wait_q;$/;"	r
pcpi_wr	picorv32.v	/^	input             pcpi_wr,$/;"	p
pcpi_wr	picorv32.v	/^	input         pcpi_wr,$/;"	p
picorv32_axi	picorv32.v	/^module picorv32_axi #($/;"	m
picorv32_axi_adapter	picorv32.v	/^module picorv32_axi_adapter ($/;"	m
picorv32_pcpi_div	picorv32.v	/^module picorv32_pcpi_div ($/;"	m
picorv32_pcpi_fast_mul	picorv32.v	/^module picorv32_pcpi_fast_mul #($/;"	m
picorv32_pcpi_mul	picorv32.v	/^module picorv32_pcpi_mul #($/;"	m
picorv32_regs	picorv32.v	/^module picorv32_regs ($/;"	m
picorv32_wb	picorv32.v	/^module picorv32_wb #($/;"	m
picosoc	picosoc.v	/^module picosoc ($/;"	m
picosoc_mem	picosoc.v	/^module picosoc_mem #($/;"	m
picosoc_regs	picosoc.v	/^module picosoc_regs ($/;"	m
powered_up	spiflash.v	/^	reg powered_up = 0;$/;"	r
prefetched_high_word	picorv32.v	/^	reg prefetched_high_word;$/;"	r
q_ascii_instr	picorv32.v	/^	reg [63:0] q_ascii_instr;$/;"	r
q_insn_imm	picorv32.v	/^	reg [31:0] q_insn_imm;$/;"	r
q_insn_opcode	picorv32.v	/^	reg [31:0] q_insn_opcode;$/;"	r
q_insn_rd	picorv32.v	/^	reg [4:0] q_insn_rd;$/;"	r
q_insn_rs1	picorv32.v	/^	reg [4:0] q_insn_rs1;$/;"	r
q_insn_rs2	picorv32.v	/^	reg [4:0] q_insn_rs2;$/;"	r
quotient	picorv32.v	/^	reg [31:0] quotient;$/;"	r
quotient_msk	picorv32.v	/^	reg [31:0] quotient_msk;$/;"	r
raddr1	picorv32.v	/^	input [5:0] raddr1,$/;"	p
raddr1	picosoc.v	/^	input [5:0] raddr1,$/;"	p
ram_rdata	picosoc.v	/^	wire [31:0] ram_rdata;$/;"	n
ram_ready	picosoc.v	/^	reg ram_ready;$/;"	r
rd	picorv32.v	/^	reg [63:0] rd, rd_q;$/;"	r
rd	picorv32.v	/^	reg [63:0] rs1, rs2, rd, rdx;$/;"	r
rd_addr	spimemio.v	/^	reg [23:0] rd_addr;$/;"	r
rd_inc	spimemio.v	/^	reg rd_inc;$/;"	r
rd_q	picorv32.v	/^	reg [63:0] rd, rd_q;$/;"	r
rd_valid	spimemio.v	/^	reg rd_valid;$/;"	r
rd_wait	spimemio.v	/^	reg rd_wait;$/;"	r
rdata2	picorv32.v	/^	output [31:0] rdata2$/;"	p
rdata2	picosoc.v	/^	output [31:0] rdata2$/;"	p
rdx	picorv32.v	/^	reg [63:0] rs1, rs2, rd, rdx;$/;"	r
ready	spimemio.v	/^	output ready,$/;"	p
recv_buf_data	simpleuart.v	/^	reg [7:0] recv_buf_data;$/;"	r
recv_buf_valid	simpleuart.v	/^	reg recv_buf_valid;$/;"	r
recv_divcnt	simpleuart.v	/^	reg [31:0] recv_divcnt;$/;"	r
recv_pattern	simpleuart.v	/^	reg [7:0] recv_pattern;$/;"	r
recv_state	simpleuart.v	/^	reg [3:0] recv_state;$/;"	r
reg	picorv32.v	/^	output reg        mem_instr,$/;"	p
reg	picorv32.v	/^	output reg        mem_valid,$/;"	p
reg	picorv32.v	/^	output reg        pcpi_ready$/;"	p
reg	picorv32.v	/^	output reg        pcpi_valid,$/;"	p
reg	picorv32.v	/^	output reg        pcpi_wait,$/;"	p
reg	picorv32.v	/^	output reg        rvfi_halt,$/;"	p
reg	picorv32.v	/^	output reg        rvfi_intr,$/;"	p
reg	picorv32.v	/^	output reg        rvfi_trap,$/;"	p
reg	picorv32.v	/^	output reg        rvfi_valid,$/;"	p
reg	picorv32.v	/^	output reg        trace_valid,$/;"	p
reg	picorv32.v	/^	output reg [ 1:0] rvfi_mode,$/;"	p
reg	picorv32.v	/^	output reg [ 3:0] mem_la_wstrb,$/;"	p
reg	picorv32.v	/^	output reg [ 3:0] mem_wstrb,$/;"	p
reg	picorv32.v	/^	output reg [ 3:0] rvfi_mem_rmask,$/;"	p
reg	picorv32.v	/^	output reg [ 3:0] rvfi_mem_wmask,$/;"	p
reg	picorv32.v	/^	output reg [ 4:0] rvfi_rd_addr,$/;"	p
reg	picorv32.v	/^	output reg [ 4:0] rvfi_rs1_addr,$/;"	p
reg	picorv32.v	/^	output reg [ 4:0] rvfi_rs2_addr,$/;"	p
reg	picorv32.v	/^	output reg [31:0] mem_la_wdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] mem_wdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] pcpi_insn,$/;"	p
reg	picorv32.v	/^	output reg [31:0] pcpi_rd,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_insn,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_mem_addr,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_mem_rdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_mem_wdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_pc_rdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_pc_wdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_rd_wdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_rs1_rdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] rvfi_rs2_rdata,$/;"	p
reg	picorv32.v	/^	output reg [31:0] wbm_dat_o,$/;"	p
reg	picorv32.v	/^	output reg [35:0] trace_data$/;"	p
reg	picorv32.v	/^	output reg [3:0] wbm_sel_o,$/;"	p
reg	picorv32.v	/^	output reg [63:0] rvfi_order,$/;"	p
reg	picorv32.v	/^	output reg wbm_stb_o,$/;"	p
reg	picosoc.v	/^	output reg [31:0] rdata$/;"	p
reg	spimemio.v	/^	output reg [31:0] rdata,$/;"	p
reg	spimemio.v	/^	output reg flash_clk,$/;"	p
reg	spimemio.v	/^	output reg flash_io0_do,$/;"	p
reg	spimemio.v	/^	output reg flash_io0_oe,$/;"	p
reg	spimemio.v	/^	output reg flash_io1_do,$/;"	p
reg	spimemio.v	/^	output reg flash_io1_oe,$/;"	p
reg	spimemio.v	/^	output reg flash_io2_do,$/;"	p
reg	spimemio.v	/^	output reg flash_io2_oe,$/;"	p
reg	spimemio.v	/^	output reg flash_io3_do,$/;"	p
reg	spimemio.v	/^	output reg flash_io3_oe,$/;"	p
reg_dat_do	simpleuart.v	/^	output [31:0] reg_dat_do,$/;"	p
reg_dat_re	simpleuart.v	/^	input         reg_dat_re,$/;"	p
reg_div_do	simpleuart.v	/^	output [31:0] reg_div_do,$/;"	p
reg_div_we	simpleuart.v	/^	input   [3:0] reg_div_we,$/;"	p
reg_next_pc	picorv32.v	/^	reg [31:0] reg_pc, reg_next_pc, reg_op1, reg_op2, reg_out;$/;"	r
reg_op1	picorv32.v	/^	reg [31:0] reg_pc, reg_next_pc, reg_op1, reg_op2, reg_out;$/;"	r
reg_op2	picorv32.v	/^	reg [31:0] reg_pc, reg_next_pc, reg_op1, reg_op2, reg_out;$/;"	r
reg_out	picorv32.v	/^	reg [31:0] reg_pc, reg_next_pc, reg_op1, reg_op2, reg_out;$/;"	r
reg_pc	picorv32.v	/^	reg [31:0] reg_pc, reg_next_pc, reg_op1, reg_op2, reg_out;$/;"	r
reg_sh	picorv32.v	/^	reg [4:0] reg_sh;$/;"	r
regs	picorv32.v	/^	reg [31:0] regs [0:30];$/;"	r
regs	picosoc.v	/^	reg [31:0] regs [0:31];$/;"	r
resetn	hx8kdemo.v	/^	wire resetn; $/;"	n
resetn	picorv32.v	/^	input clk, resetn,$/;"	c
resetn	picorv32.v	/^	input clk, resetn,$/;"	p
resetn	picorv32.v	/^	wire resetn;$/;"	n
resetn	spimemio.v	/^	input clk, resetn,$/;"	p
rs1	picorv32.v	/^	reg [32:0] rs1, rs2, rs1_q, rs2_q;$/;"	r
rs1	picorv32.v	/^	reg [63:0] rs1, rs2, rd, rdx;$/;"	r
rs1_q	picorv32.v	/^	reg [32:0] rs1, rs2, rs1_q, rs2_q;$/;"	r
rs2	picorv32.v	/^	reg [32:0] rs1, rs2, rs1_q, rs2_q;$/;"	r
rs2	picorv32.v	/^	reg [63:0] rs1, rs2, rd, rdx;$/;"	r
rs2_q	picorv32.v	/^	reg [32:0] rs1, rs2, rs1_q, rs2_q;$/;"	r
running	picorv32.v	/^	reg running;$/;"	r
rvfi_halt	picorv32.v	/^	output        rvfi_halt,$/;"	p
rvfi_insn	picorv32.v	/^	output [31:0] rvfi_insn,$/;"	p
rvfi_mem_addr	picorv32.v	/^	output [31:0] rvfi_mem_addr,$/;"	p
rvfi_mem_wdata	picorv32.v	/^	output [31:0] rvfi_mem_wdata,$/;"	p
rvfi_mem_wmask	picorv32.v	/^	output [ 3:0] rvfi_mem_wmask,$/;"	p
rvfi_pc_rdata	picorv32.v	/^	output [31:0] rvfi_pc_rdata,$/;"	p
rvfi_rd_addr	picorv32.v	/^	output [ 4:0] rvfi_rd_addr,$/;"	p
rvfi_rs1_addr	picorv32.v	/^	output [ 4:0] rvfi_rs1_addr,$/;"	p
rvfi_rs1_rdata	picorv32.v	/^	output [31:0] rvfi_rs1_rdata,$/;"	p
rvfi_valid	picorv32.v	/^	output        rvfi_valid,$/;"	p
send_bitcnt	simpleuart.v	/^	reg [3:0] send_bitcnt;$/;"	r
send_divcnt	simpleuart.v	/^	reg [31:0] send_divcnt;$/;"	r
send_dummy	simpleuart.v	/^	reg send_dummy;$/;"	r
send_pattern	simpleuart.v	/^	reg [9:0] send_pattern;$/;"	r
ser_rx	hx8kdemo.v	/^	input ser_rx,$/;"	p
ser_rx	hx8kdemo_tb.v	/^	wire ser_rx;$/;"	n
ser_rx	picosoc.v	/^	input  ser_rx,$/;"	p
ser_sample	hx8kdemo_tb.v	/^	event ser_sample;$/;"	e
ser_tx	hx8kdemo_tb.v	/^	wire ser_tx;$/;"	n
ser_tx	simpleuart.v	/^	output ser_tx,$/;"	p
set_mem_do_rdata	picorv32.v	/^	reg set_mem_do_rdata;$/;"	r
set_mem_do_rinst	picorv32.v	/^	reg set_mem_do_rinst;$/;"	r
set_mem_do_wdata	picorv32.v	/^	reg set_mem_do_wdata;$/;"	r
shift_out	picorv32.v	/^	reg shift_out;$/;"	r
simpleuart	simpleuart.v	/^module simpleuart ($/;"	m
simpleuart_reg_dat_do	picosoc.v	/^	wire [31:0] simpleuart_reg_dat_do;$/;"	n
simpleuart_reg_dat_sel	picosoc.v	/^	wire        simpleuart_reg_dat_sel = mem_valid && (mem_addr == 32'h 0200_0008);$/;"	n
simpleuart_reg_dat_wait	picosoc.v	/^	wire        simpleuart_reg_dat_wait;$/;"	n
simpleuart_reg_div_do	picosoc.v	/^	wire [31:0] simpleuart_reg_div_do;$/;"	n
simpleuart_reg_div_sel	picosoc.v	/^	wire        simpleuart_reg_div_sel = mem_valid && (mem_addr == 32'h 0200_0004);$/;"	n
softreset	spimemio.v	/^	reg softreset;$/;"	r
spi_action	spiflash.v	/^	task spi_action;$/;"	t
spi_addr	spiflash.v	/^	reg [23:0] spi_addr;$/;"	r
spi_cmd	spiflash.v	/^	reg [7:0] spi_cmd;$/;"	r
spi_in	spiflash.v	/^	reg [7:0] spi_in;$/;"	r
spi_io_vld	spiflash.v	/^	reg spi_io_vld;$/;"	r
spi_out	spiflash.v	/^	reg [7:0] spi_out;$/;"	r
spiflash	spiflash.v	/^module spiflash ($/;"	m
spimem_rdata	picosoc.v	/^	wire [31:0] spimem_rdata;$/;"	n
spimem_ready	picosoc.v	/^	wire spimem_ready;$/;"	n
spimemio	spimemio.v	/^module spimemio ($/;"	m
spimemio_cfgreg_do	picosoc.v	/^	wire [31:0] spimemio_cfgreg_do;$/;"	n
spimemio_cfgreg_sel	picosoc.v	/^	wire spimemio_cfgreg_sel = mem_valid && (mem_addr == 32'h 0200_0000);$/;"	n
spimemio_xfer	spimemio.v	/^module spimemio_xfer ($/;"	m
start	picorv32.v	/^	wire start = pcpi_wait && !pcpi_wait_q;$/;"	n
state	picorv32.v	/^	reg [1:0] state;$/;"	r
state	spimemio.v	/^	reg [3:0] state;$/;"	r
testbench	hx8kdemo_tb.v	/^module testbench;$/;"	m
testbench	zebu_tb.v	/^module testbench;$/;"	m
this_rs2	picorv32.v	/^	reg [63:0] next_rs1, next_rs2, this_rs2;$/;"	r
timer	picorv32.v	/^	reg [31:0] timer;$/;"	r
trace_data	picorv32.v	/^	output [35:0] trace_data$/;"	p
trace_data	picorv32.v	/^	output [35:0] trace_data,$/;"	p
wb_clk_i	picorv32.v	/^	input wb_clk_i,$/;"	p
wbm_ack_i	picorv32.v	/^	input wbm_ack_i,$/;"	p
wbm_dat_i	picorv32.v	/^	input [31:0] wbm_dat_i,$/;"	p
wdata	picorv32.v	/^	input [31:0] wdata,$/;"	p
wdata	picosoc.v	/^	input [31:0] wdata,$/;"	p
we	picorv32.v	/^	wire we;$/;"	n
wen	picorv32.v	/^	input clk, wen,$/;"	p
wen	picosoc.v	/^	input clk, wen,$/;"	p
xfer_clk	spimemio.v	/^	wire xfer_clk;$/;"	n
xfer_cont	spimemio.v	/^	reg xfer_cont;$/;"	r
xfer_csb	spimemio.v	/^	wire xfer_csb;$/;"	n
xfer_ddr	spimemio.v	/^	reg xfer_ddr;$/;"	r
xfer_ddr	spimemio.v	/^	wire xfer_ddr = din_ddr && din_qspi;$/;"	n
xfer_ddr_q	spimemio.v	/^	reg xfer_ddr_q;$/;"	r
xfer_done	picorv32.v	/^	reg xfer_done;$/;"	r
xfer_dspi	spimemio.v	/^	reg xfer_dspi;$/;"	r
xfer_dspi	spimemio.v	/^	wire xfer_dspi = din_ddr && !din_qspi;$/;"	n
xfer_io0_90	spimemio.v	/^	reg xfer_io0_90;$/;"	r
xfer_io0_do	spimemio.v	/^	wire xfer_io0_do;$/;"	n
xfer_io0_oe	spimemio.v	/^	wire xfer_io0_oe;$/;"	n
xfer_io1_90	spimemio.v	/^	reg xfer_io1_90;$/;"	r
xfer_io1_do	spimemio.v	/^	wire xfer_io1_do;$/;"	n
xfer_io1_oe	spimemio.v	/^	wire xfer_io1_oe;$/;"	n
xfer_io2_90	spimemio.v	/^	reg xfer_io2_90;$/;"	r
xfer_io2_do	spimemio.v	/^	wire xfer_io2_do;$/;"	n
xfer_io2_oe	spimemio.v	/^	wire xfer_io2_oe;$/;"	n
xfer_io3_90	spimemio.v	/^	reg xfer_io3_90;$/;"	r
xfer_io3_do	spimemio.v	/^	wire xfer_io3_do;$/;"	n
xfer_io3_oe	spimemio.v	/^	wire xfer_io3_oe;$/;"	n
xfer_qspi	spimemio.v	/^	reg xfer_qspi;$/;"	r
xfer_rd	spimemio.v	/^	reg xfer_rd;$/;"	r
xfer_resetn	spimemio.v	/^	reg        xfer_resetn;$/;"	r
xfer_tag	spimemio.v	/^	reg [3:0] xfer_tag;$/;"	r
xfer_tag_q	spimemio.v	/^	reg [3:0] xfer_tag_q;$/;"	r
xip_cmd	spiflash.v	/^	reg [7:0] xip_cmd = 0;$/;"	r
